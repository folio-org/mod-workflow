<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.folio</groupId>
    <artifactId>mod-workflow</artifactId>
    <version>1.2.0-SNAPSHOT</version>
  </parent>

  <artifactId>workflow-service</artifactId>

  <name>Okapi Workflow Service</name>
  <description>Okapi workflow service using Spring Boot</description>

  <packaging>jar</packaging>

  <properties>
    <openapi.server.port>9000</openapi.server.port>
    <folio-spring.version>9.1.0</folio-spring.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>spring-tenant</artifactId>
      <version>${spring-module-core.version}</version>
    </dependency>

    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>spring-messaging</artifactId>
      <version>${spring-module-core.version}</version>
    </dependency>

    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring-module-core.version}</version>
    </dependency>

    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring-module-core.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>workflow-components</artifactId>
      <version>${project.parent.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-rest</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-kahadb-store</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-broker</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.apache.activemq</groupId>
          <artifactId>activemq-client</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-rest-hal-explorer</artifactId>
    </dependency>

    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-spring-base</artifactId>
      <version>${folio-spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-spring-cql</artifactId>
      <version>${folio-spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
       <groupId>org.apache.commons</groupId>
       <artifactId>commons-compress</artifactId>
       <version>1.28.0</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>false</skip>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.hibernate.orm.tooling</groupId>
        <artifactId>hibernate-enhance-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>enhance</id>
            <phase>compile</phase>
            <goals>
              <goal>enhance</goal>
            </goals>
            <configuration>
              <failOnError>true</failOnError>
              <enableLazyInitialization>true</enableLazyInitialization>
              <enableDirtyTracking>true</enableDirtyTracking>
              <enableAssociationManagement>true</enableAssociationManagement>
              <enableExtendedEnhancement>false</enableExtendedEnhancement>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <skip>false</skip>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.graalvm.buildtools</groupId>
        <artifactId>native-maven-plugin</artifactId>
        <configuration>
          <skip>false</skip>
        </configuration>
      </plugin>
    </plugins>

    <resources>
      <resource>
        <filtering>false</filtering>
        <directory>ramls</directory>
        <targetPath>ramls</targetPath>
        <includes>
          <include>*.json</include>
          <include>*.raml</include>
        </includes>
      </resource>
      <resource>
        <filtering>false</filtering>
        <directory>ramls</directory>
        <targetPath>../ramls</targetPath>
        <includes>
          <include>*.json</include>
          <include>*.raml</include>
        </includes>
      </resource>
      <resource>
        <filtering>false</filtering>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>application.yaml</exclude>
        </excludes>
      </resource>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
        <includes>
          <include>application.yaml</include>
        </includes>
      </resource>
      <resource>
        <filtering>true</filtering>
        <directory>descriptors</directory>
        <targetPath>descriptors</targetPath>
        <includes>
          <include>DeploymentDescriptor.json</include>
          <include>ModuleDescriptor.json</include>
        </includes>
      </resource>
      <resource>
        <filtering>true</filtering>
        <directory>descriptors</directory>
        <targetPath>../descriptors</targetPath>
        <includes>
          <include>DeploymentDescriptor.json</include>
          <include>ModuleDescriptor.json</include>
        </includes>
      </resource>
    </resources>

    <testResources>
      <testResource>
        <filtering>false</filtering>
        <directory>src/test/resources</directory>
        <excludes>
          <exclude>application.yaml</exclude>
        </excludes>
      </testResource>
      <testResource>
        <filtering>true</filtering>
        <directory>src/test/resources</directory>
        <includes>
          <include>application.yaml</include>
        </includes>
      </testResource>
    </testResources>
  </build>

  <profiles>
    <profile>
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
              <skip>false</skip>
            </configuration>
            <executions>
              <execution>
                <id>repackage</id>
                <goals>
                  <goal>repackage</goal>
                </goals>
                <configuration>
                  <mainClass>org.folio.rest.workflow.SpringOkapiModule</mainClass>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>filter-descriptor-inputs</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${basedir}/descriptors</directory>
                      <include>*Descriptor*-template.json</include>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>com.coderplus.maven.plugins</groupId>
            <artifactId>copy-rename-maven-plugin</artifactId>
            <version>1.0.1</version>
            <executions>
              <execution>
                <id>rename-descriptor-outputs</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>copy</goal>
                </goals>
                <configuration>
                  <fileSets>
                    <fileSet>
                      <sourceFile>${project.build.directory}/ModuleDescriptor-template.json</sourceFile>
                      <destinationFile>${project.build.directory}/ModuleDescriptor.json</destinationFile>
                    </fileSet>
                    <fileSet>
                      <sourceFile>${project.build.directory}/ModuleDescriptor-template.json</sourceFile>
                      <destinationFile>${project.build.directory}/../../target/ModuleDescriptor.json</destinationFile>
                    </fileSet>
                    <fileSet>
                      <sourceFile>${project.build.directory}/DeploymentDescriptor-template.json</sourceFile>
                      <destinationFile>${project.build.directory}/DeploymentDescriptor.json</destinationFile>
                    </fileSet>
                    <fileSet>
                      <sourceFile>${project.build.directory}/DeploymentDescriptor-template.json</sourceFile>
                      <destinationFile>${project.build.directory}/../../target/DeploymentDescriptor.json</destinationFile>
                    </fileSet>
                  </fileSets>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>openapi</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
              <skip>false</skip>
              <jvmArguments>-Dspring.application.admin.enabled=true -Dfolio.tenant.validation=false -Dheader.validation.x-okapi-tenant.exclude.base-paths=/</jvmArguments>
              <arguments>
                <argument>--server.port=${openapi.server.port}</argument>
              </arguments>
              <systemPropertyVariables>
                <server.port>${openapi.server.port}</server.port>
                <spring.sql.init.platform>h2</spring.sql.init.platform>
                <spring.datasource.driverClassName>org.h2.Driver</spring.datasource.driverClassName>
                <spring.datasource.url>jdbc:h2:mem:AZ;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL;DATABASE_TO_LOWER=true;DEFAULT_NULL_ORDERING=HIGH</spring.datasource.url>
                <spring.jpa.database-platform>org.hibernate.dialect.H2Dialect</spring.jpa.database-platform>
                <spring.jpa.hibernate.ddl-auto>create-drop</spring.jpa.hibernate.ddl-auto>
              </systemPropertyVariables>
            </configuration>
            <executions>
              <execution>
                <id>openapi-repackage</id>
                <goals>
                  <goal>repackage</goal>
                </goals>
                <configuration>
                  <mainClass>org.folio.rest.workflow.SpringOkapiModule</mainClass>
                </configuration>
              </execution>
              <execution>
                <id>openapi-repackage-start</id>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>openapi-repackage-stop</id>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-maven-plugin</artifactId>
            <configuration>
              <skip>false</skip>
              <apiDocsUrl>http://localhost:${openapi.server.port}/api-docs.yaml</apiDocsUrl>
              <outputFileName>openapi.yaml</outputFileName>
              <outputDir>src/main/resources/</outputDir>
            </configuration>
            <executions>
              <execution>
              <id>openapi-generate-api</id>
              <goals>
                <goal>generate</goal>
              </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
